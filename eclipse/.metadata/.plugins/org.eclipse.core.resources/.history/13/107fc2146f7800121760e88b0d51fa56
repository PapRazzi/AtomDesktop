package me.atom.windowsj;

import java.util.Scanner;
import java.awt.*;
import java.io.*;
import java.net.*;
import javax.swing.*;



public class Atom {

	/**
	 * @param args
	 *
	 *  ATOM is initializing. He introduces him and salute you :)
	 *  In this class, there's the main stuff: it only retrieves your query,
	 *  And send it to another class to translate it, and once more to 
	 *  another to analyze it. If it's 
	 */	
		
	static Scanner scan;
	static boolean checkedOnce = false;
	static int intents =0;
	static DialogWindow window;
	static int screenHeight;
	static int screenWidth;
	
	public static void main(String[] args) throws IOException, FontFormatException, InterruptedException {
		
		startAtom();
		
	}
	
		public static void startAtom() throws IOException, FontFormatException, InterruptedException {
		
		try {
		UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Exception e) {
		e.printStackTrace();
		}
				
		Image icon = Toolkit.getDefaultToolkit().getImage("images/iconsmall.png");
		window = new DialogWindow();
		window.setIconImage(icon);
		
		Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        screenWidth = (int)screenSize.getWidth();
        screenHeight = (int)screenSize.getHeight();
        int x = (int) (screenWidth - (screenWidth/3.5));
        
        window.setLocation(x, 10);
        window.setSize(new Dimension((int) (screenWidth/3.5)-10,(int) (screenHeight-45)));        
        window.setAlwaysOnTop(true);
		
	}	
			
	public static void AskUser() {
		
		while (intents == 0) {
			if (!checkedOnce) {
				checkedOnce = true;
				System.out.println("Copyright Guillaume C. aka chlkbumper 2012/2013 :)");
		    	System.out.println("Hi, I am Atom, your personnal assistant.");
				System.out.println("Pour me poser une question, appuyer sur une Enter.");
				
		       	System.out.println("Parlez maintenant.");
		       	/////////STARTS
		       	Thread stop = new Thread(new Runnable() {
					
					public void run() {
						try {
							Thread.sleep(4000);
						} catch (InterruptedException e) {
							e.printStackTrace();
						}
					
				try {
					VoiceInputToolbox.stopRecording();
				} catch (MalformedURLException e) {
					e.printStackTrace();
				}
				}});
				stop.start();
				
				VoiceInputToolbox.startRecording();
				
			} else {
				System.out.println("Something else for your service ?");
				System.out.println("Appuyez sur une touche pour continuer.");
				
				System.out.println("Parlez maintenant.");
		       	/////////STARTS
		       	Thread stop = new Thread(new Runnable() {
					
					public void run() {
						try {
							Thread.sleep(4000);
						} catch (InterruptedException e) {
							e.printStackTrace();
						}
					
				try {
					VoiceInputToolbox.stopRecording();
				} catch (MalformedURLException e) {
					e.printStackTrace();
				}
				}});
				stop.start();
				
				VoiceInputToolbox.startRecording();		       	
			
			}
		}
}			
		
}		
		
		